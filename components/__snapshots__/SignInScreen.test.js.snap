// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sign In Screen should match the snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "alignItems": "center",
    }
  }
>
  <View>
    <View
      style={
        {
          "alignSelf": "flex-start",
          "flex": 1,
          "marginBottom": 140,
          "marginLeft": 20,
          "marginTop": 60,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      />
    </View>
    <Text
      style={
        {
          "fontFamily": "Satoshi-Medium",
          "fontSize": 28,
          "fontWeight": "600",
          "marginBottom": 80,
        }
      }
    >
      Sign In to 
      <Text
        style={
          {
            "color": "#45B369",
          }
        }
      >
        DG Scorecard
      </Text>
    </Text>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderRadius": 15,
            "flexDirection": "row",
            "height": 56,
            "width": 327,
          }
        }
      >
        <TextInput
          autoCapitalize="none"
          autoCorrect={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          placeholder="Email"
          style={
            {
              "alignSelf": "center",
              "flex": 1,
              "fontFamily": "Satoshi-Medium",
              "height": 60,
              "marginBottom": 8,
              "marginLeft": 10,
              "marginTop": 10,
              "padding": 10,
              "width": 327,
            }
          }
          value=""
        />
      </View>
      <Text
        style={
          {
            "color": "red",
            "padding": 5,
          }
        }
      />
      <View
        style={
          {
            "backgroundColor": "white",
            "borderRadius": 15,
            "flexDirection": "row",
            "height": 56,
            "width": 327,
          }
        }
      >
        <TextInput
          autoCapitalize="none"
          autoCorrect={false}
          onChangeText={[Function]}
          placeholder="Password"
          secureTextEntry={true}
          style={
            {
              "alignSelf": "center",
              "flex": 1,
              "fontFamily": "Satoshi-Medium",
              "height": 60,
              "marginBottom": 8,
              "marginLeft": 10,
              "marginTop": 10,
              "padding": 10,
              "width": 327,
            }
          }
          value=""
        />
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        {
          "margin": 15,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            {
              "fontFamily": "Satoshi-Medium",
            }
          }
        >
          Forgot Password?
        </Text>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#2D6061",
          "borderRadius": 12,
          "fontFamily": "Satoshi-Medium",
          "height": 60,
          "justifyContent": "center",
          "marginBottom": 40,
          "opacity": 1,
          "width": 327,
        }
      }
    >
      <Text
        style={
          {
            "color": "white",
            "fontFamily": "Satoshi-Medium",
            "fontSize": 18,
            "fontWeight": "500",
          }
        }
      >
        Sign in
      </Text>
    </View>
    <View>
      <Text
        numberOfLines={2}
        style={
          {
            "color": "#6B7280",
            "fontFamily": "Satoshi-Medium",
            "fontSize": 14,
            "marginTop": 150,
            "paddingBottom": 5,
            "textAlign": "center",
          }
        }
      >
        By signing in, you agree to the
         
        <Text
          style={
            {
              "color": "black",
              "fontWeight": "400",
            }
          }
        >
          DG Scorecard Terms & Conditions
        </Text>
         
        and 
        <Text
          style={
            {
              "color": "black",
              "fontWeight": "400",
            }
          }
        >
          Privacy Policy
        </Text>
        .
      </Text>
    </View>
  </View>
</RCTScrollView>
`;
