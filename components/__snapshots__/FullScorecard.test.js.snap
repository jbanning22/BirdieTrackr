// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Full Scorecard Screen should match the snapshot 1`] = `
<RNCSafeAreaView
  edges={
    [
      "bottom",
      "left",
      "right",
      "top",
    ]
  }
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#DDDDDD",
      "flex": 1,
      "justifyContent": "flex-start",
    }
  }
>
  <Text
    style={
      {
        "color": "#DB6F52",
        "fontFamily": "Helvetica",
        "fontSize": 44,
        "fontWeight": "400",
        "textAlign": "center",
      }
    }
  >
     Scorecard
  </Text>
  <View
    style={
      {
        "flex": 0,
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      pagingEnabled={true}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsHorizontalScrollIndicator={false}
      snapToAlignment="center"
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View />
    </RCTScrollView>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        {
          "alignSelf": "center",
          "marginTop": 50,
        }
      }
    >
      Back
    </Text>
  </View>
</RNCSafeAreaView>
`;
